% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fast_gfpca.R
\name{fast_gfpca}
\alias{fast_gfpca}
\title{Fast generalized functional principal components analysis}
\usage{
fast_gfpca(
  Y,
  argvals = NULL,
  overlap = TRUE,
  binwidth = 10,
  pve = 0.99,
  npc = NULL,
  family = "binomial",
  ...
)
}
\arguments{
\item{Y}{dataframe with very specific column}

\item{argvals}{numeric; grid over which functions are observed.  If null defaults to unique values of index.}

\item{pve}{proportion of variance explained: used to choose the number of
principal components unless \code{npc} is specified.}

\item{npc}{how many smooth PCs to try to extract, if \code{NULL} (the
default) then npc is chosen based on \code{pve}}

\item{family}{exponential family to be passed to \code{glmer} and \code{bam}.}

\item{periodicity}{Option for a periodic spline basis. Defaults to FALSE.
.}
}
\value{
An object of class \code{fpca} containing:
\item{efunctions}{\eqn{D \times npc} matrix of estimated FPC basis functions.}
\item{evalues}{Estimated variance of the FPC scores.}
\item{npc}{number of FPCs.}
\item{scores}{\eqn{I \times npc} matrix of estimated FPC scores.}
\item{mu}{Estimated population-level mean.}
\item{Yhat}{FPC approximation of subject-specific means, before applying the
response function.}
\item{Y}{The observed data.}
\item{family}{for compatibility with \code{refund.shiny} package.}
}
\description{
I fast implementation of GFPCA that uses the ...
The number of functional principal components (FPCs) can either be specified
directly (argument \code{npc}) or chosen based on the explained share of
variance (\code{npc_varExplained}). In the latter case, the explained share of
variance and accordingly the number of FPCs is estimated before the main
estimation step by once running the FPCA with \code{npc = 20} (and
correspondingly \code{Kt = 20}). Doing so, we approximate the overall
variance in the data \code{Y} with the variance represented by the FPC basis
with 20 FPCs.
}
\examples{
# simulate data
set.seed(1001)

# binomial data, with overlapping bins
df_gfpca <- sim_gfpca(N = 200, J = 200, case = 1)$df_gfpca
gfpca_mod <- fast_gfpca(df_gfpca, overlap = TRUE, binwidth = 10, family = "binomial")

# binomial data, with bins that do not overlap
df_gfpca <- sim_gfpca(N = 200, J = 200, case = 2)$df_gfpca
gfpca_mod <- fast_gfpca(df_gfpca, overlap = FALSE, binwidth = 10, family = "binomial")

Poisson data, overlapping bins
df_gfpca <- sim_gfpca(N = 200, J = 200, case = 1, family = "poisson")$df_gfpca
gfpca_mod <- fast_gfpca(df_gfpca, overlap = TRUE, binwidth = 10, family = "poisson")

}
\references{
Xiao, L., Ruppert, D., Zipunnikov, V., and Crainiceanu, C. (2016).
Fast covariance estimation for high-dimensional functional data.
\emph{Statistics and Computing}, 26, 409-421.
DOI: 10.1007/s11222-014-9485-x.
}
\author{
Andrew Leroux \email{andrew.leroux@cuanschutz.edu},
Julia Wrobel \email{julia.wrobel@cuanschutz.edu}
}
